<chapter xmlns:xi="http://www.w3.org/2001/XInclude"  xml:id="chp_list_of_common_errors">
  <title>List of Common Errors</title>
  <p>
    In this section,
    we will review some of the most common errors encountered when using Maple.
    Many of these errors are caused when using 2D Math,
    which makes complicated expressions look pretty,
    but can cause other issues.
    For a description of font styles,
    see <xref ref="chp_maple_environment">Tutorial</xref>,
    <xref ref="chp_maple_environment">page</xref>.
  </p>
  <p>
    \subsection{Missing Brackets}
  </p>
  <p>
    In Maple, we will use several types of brackets such as parentheses,
    square brackets, and curly braces.
    Maple refers to these as delimiters.
    If these delimiters are not found in pairs,
    then Maple will be unable to understand the syntax of your command.
  </p>
  <aside>
    <p>
      In this example, there is an open square bracket,
      but no square closed bracket.
    </p>
  </aside>
  <p>
    \begin{maplegroup} \begin{mapleinput} {plot([f(x), g(x),
    x =-5..5);} \end{mapleinput} \relax \begin{maplelatex} {Error,
    mismatched or missing bracket/operator}{<c>Error,
    mismatched or missing bracket/operator</c>} \end{maplelatex} \end{maplegroup}
  </p>
  <p>
    \subsection{Spelling Errors}
  </p>
  <p>
    Maple cannot correct for poor spelling.
    If a command is misspelled, then it will treat the command as a variable name.
  </p>
  <aside>
    <p>
      Maple doesn't know to solve this equation if you don't spell the <c>solve()</c> command properly!
    </p>
  </aside>
  <p>
    \begin{maplegroup} \begin{mapleinput} {slove(x^2 = 4);} \end{mapleinput} \relax \begin{maplelatex} {slove(x^2 = 4)}{
    <me>
      \displaystyle \textit{slove} \left( {x}^{2}=4 \right)
    </me>
  </p>
  <p>
    } \end{maplelatex} \end{maplegroup}
  </p>
  <p>
    \subsection{The <c>%</c> Shortcut Not Working as Intended}
  </p>
  <p>
    The <c>%</c> shortcut will only use the output command that was last run.
  </p>
  <aside>
    <p>
      In this example,
      the expected output of the second command is the decimal value of <m>\cos(\pi)</m>,
      which is equal to <m>-1</m>.
      However, it appears that the second command was run after the third,
      producing the decimal approximation of the third command.
    </p>
    <p>
      It is usually a good practice to use the <c>%</c> operator on the same line as the previous command.
      For example:
    </p>
    <p>
       <c> > subs(x=Pi,cos(x)); evalf(%); </c>
    </p>
  </aside>
  <p>
    \begin{maplegroup} \begin{mapleinput} {subs(x = Pi, cos(x));}{
    <me>
      > \textit{subs}\!\left( x=\pi,\cos \left( x \right)  \right);
    </me>
  </p>
  <p>
    } \end{mapleinput} \relax \begin{maplelatex} {cos(Pi)}{
    <me>
      \displaystyle \cos \left( \pi \right)
    </me>
  </p>
  <p>
    } \end{maplelatex} \end{maplegroup}
  </p>
  <p>
    \begin{maplegroup} \begin{mapleinput} {evalf( \end{mapleinput} \relax \begin{maplelatex} {.6735930582}{
    <me>
      \displaystyle  0.6735930582
    </me>
  </p>
  <p>
    } \end{maplelatex} \end{maplegroup}
  </p>
  <p>
    \begin{maplegroup} \begin{mapleinput} {fsolve(x^3 + 4*x = 3);}{
    <me>
      > \textit{fsolve}\!\left( {x}^{3}+4\,x=3 \right);
    </me>
  </p>
  <p>
    } \end{mapleinput} \relax \begin{maplelatex} {.6735930582}{
    <me>
      \displaystyle  0.6735930582
    </me>
  </p>
  <p>
    } \end{maplelatex} \end{maplegroup}
  </p>
  <p>
    \subsection{Missing Multiplication Between Variables}
  </p>
  <p>
    Whenever two variables
    (such as <m>x</m> and <m>y</m>)
    are multiplied together,
    you must explicitly include the multiplication sign between them.
    If no * or space is included between the variables,
    it may be interpreted as an entirely different variable name.
  </p>
  <aside>
    <p>
      In this example,
      no multiplication was included between <m>x</m> and <m>y</m>.
      Maple mistakenly thinks that <m>xy</m> is the name of a third variable.
    </p>
  </aside>
  <p>
    \begin{maplegroup} \begin{mapleinput} {implicitplot(x^2 + y^2 = 6xy,
    x =-5..5, y =-5..5);}{
    <me>
      > \textit{implicitplot}(x^2+y^2 = 6xy, x = -5 .. 5, y = -5 .. 5);
    </me>
  </p>
  <p>
    } \end{mapleinput} \relax \begin{maplelatex} {<c>Error,
    (in plots/implicitplot)
    invalid input:</c>} {<c>the following extra unknowns were found in</c>} {<c>the input expression: \{xy\}</c>} \end{maplelatex} \end{maplegroup}
  </p>
  <p>
    \subsection{Spaces and Parentheses: Multiplication versus Functions}
  </p>
  <p>
    When typing in 2D Math
    (the default font),
    spaces and parentheses may be interpreted by Maple in unintended ways.
  </p>
  <p>
    When using commands,
    make sure that there is no space between the command name and its parentheses.
    This will be treated as multiplication.
  </p>
  <aside>
    <p>
      In this example, Maple thinks that the word
      <q>plot</q>
      should be multiplied by the expression in parentheses.
      This is why the name of the command appears in the output.
    </p>
  </aside>
  <p>
    \begin{maplegroup} \begin{mapleinput} {plot (x^2 + 5);}{
    <me>
      > \textit{plot} \, \left( {x}^{2}+5 \right);
    </me>
  </p>
  <p>
    } \end{mapleinput} \relax \begin{maplelatex} {plot*(x^2+5)}{
    <me>
      \displaystyle  \textit{plot} \, \left( {x}^{2}+5 \right)
    </me>
  </p>
  <p>
    } \end{maplelatex} \end{maplegroup}
  </p>
  <p>
    Similarly, if there is no space or <c>*</c> between a variable name and the parentheses,
    the notation may be mistaken as function notation.
  </p>
  <aside>
    <p>
      Clearly, Maple should be able to expand this basic expression.
      However, it misinterprets the user's input as being function notation.
      Maple reads this expression as
      <q><m>x</m> of <m>x^3-1</m></q>.
    </p>
  </aside>
  <p>
    \begin{maplegroup} \begin{mapleinput} {expand(2*x(x^3 - 1));}{
    <me>
      \textit{expand} \left( 2\,x\!\left( {x}^{3}-1 \right)  \right);
    </me>
  </p>
  <p>
    } \end{mapleinput} \relax \begin{maplelatex} {2*x(x^3-1)}{
    <me>
      \displaystyle 2\,x \left( {x}^{3}-1 \right)
    </me>
  </p>
  <p>
    } \end{maplelatex} \end{maplegroup}
  </p>
  <p>
    \subsection{Assigning Expressions to <m>x</m> or Other Common Variable Names}
  </p>
  <p>
    It's never a good idea to assign an expression to <m>x</m>,
    <m>y</m>, <m>t</m>, or other common variable names.
    If you want to unassign everything at once,
    you can do this with the <c>restart</c> command on a separate line.
  </p>
  <aside>
    <p>
      In this example, the value <m>3</m> is assigned to <m>x</m>,
      so the expression <m>x^2-4x-12</m> is equal to the value <m>-15</m>.
      This is remedied after using the <c>restart</c> command.
    </p>
  </aside>
  <p>
    \begin{maplegroup} \begin{mapleinput} {x := 3;
    factor(x^2 - 4x - 12);}{
    <me>
      > x := 3; \, \textit{factor}(x^2-4x-12);
    </me>
  </p>
  <p>
    } \end{mapleinput} \relax \begin{maplelatex} {x := 3}{
    <me>
      \displaystyle x\, := \,3
    </me>
  </p>
  <p>
    } \end{maplelatex} \relax \begin{maplelatex} {-15}{
    <me>
      \displaystyle -15
    </me>
  </p>
  <p>
    } \end{maplelatex} \end{maplegroup}
  </p>
  <aside>
    <p>
      You will need to load any required packages again after running the <c>restart</c> command.
    </p>
  </aside>
  <p>
    \begin{maplegroup} \begin{mapleinput} {restart;
    factor(x^2 - 4x - 12);}{
    <me>
      > restart; \, \textit{factor}(x^2-4x-12);
    </me>
  </p>
  <p>
    } \end{mapleinput} \relax \begin{maplelatex} {(x+2)*(x-6)}{
    <me>
      \displaystyle  \left( x+2 \right)  \left( x-6 \right)
    </me>
  </p>
  <p>
    } \end{maplelatex} \end{maplegroup}
  </p>
  <p>
    \subsection{Equals Signs versus Assignment Operator}
  </p>
  <p>
    The equals sign <c>=</c> must be used for an equation and the assignment operator <c>:=</c> is used to store a value or expression for later use.
  </p>
  <aside>
    <p>
      The equals sign is used for the <c>subs()</c> command,
      since we are not assigning the value for the remainder of the document.
    </p>
  </aside>
  <p>
    \begin{maplegroup} \begin{mapleinput} {subs(x := 5, cos(x) - 1);}{
    <me>
      >\textit{subs}\!\left(x :=5,\cos \left(x \right)-1\right);
    </me>
  </p>
  <p>
    } \end{mapleinput} \relax \begin{maplelatex} {Error,
    invalid assignment}{<c>Error,
    invalid assignment</c>} \end{maplelatex} \end{maplegroup}
  </p>
  <p>
    \subsection{Changing the Order of the Parameters in a Command}
  </p>
  <p>
    Many commands have multiple parameters and often the order in which the parameters is listed is important.
    Typing the parameters in an incorrect order in certain commands may cause an error message to be displayed when the command is executed. \begin{maplegroup} \begin{mapleinput} {subs(4x-3, x=2);} \end{mapleinput} \relax \begin{maplelatex} {<c>Error,
    invalid input:
    subs received 4x-3,</c>} {<c>which is not valid for its 1st argument</c>}
  </p>
  <p>
    \end{maplelatex} \end{maplegroup}
  </p>
  <aside>
    <p>
      In this example,
      the two parameters in the <c>subs()</c> command need to be interchanged.
    </p>
  </aside>
  <p>
    \subsection{Assigning a Function and Not Using Function Notation}
  </p>
  <p>
    If you have assigned a function (such as <m>f(x)</m>) in Maple,
    make sure to use function notation in other commands,
    rather than using only the name of the function.
  </p>
  <aside>
    <p>
      In this example,
      the <c>factor()</c> command should be <c>factor(f(x))</c>.
    </p>
  </aside>
  <p>
    \begin{maplegroup} \begin{mapleinput} {f(x) := x^2 - 4; factor(f);}{
    <me>
      > f(x) := x^2-4; \, \textit{factor}(f);
    </me>
  </p>
  <p>
    } \end{mapleinput} \relax \begin{maplelatex} {f := proc (x) options operator, arrow;
    x^2-4 end proc}{
    <me>
      \displaystyle f\, := \,x\mapsto {x}^{2}-4
    </me>
  </p>
  <p>
    } \end{maplelatex} \relax \begin{maplelatex} {f}{
    <me>
      \displaystyle f
    </me>
  </p>
  <p>
    } \end{maplelatex} \end{maplegroup}
  </p>
  <p>
    \subsection{Case-Sensitive Commands}
  </p>
  <p>
    Commands are case-sensitive.
    Make sure to use the correct capitalization.
  </p>
  <aside>
    <p>
      The correct command here is <c>solve()</c>,
      which needs a lowercase <sq>s</sq>.
    </p>
  </aside>
  <p>
    \begin{maplegroup} \begin{mapleinput} {Solve(3*x + 5 = 2);}{
    <me>
      > \textit{Solve}\!\left( 3\,x+5=2 \right);
    </me>
  </p>
  <p>
    } \end{mapleinput} \relax \begin{maplelatex} {Solve(3*x+5 = 2)}{
    <me>
      \displaystyle \textit{Solve} \left( 3\,x+5=2 \right)
    </me>
  </p>
  <p>
    } \end{maplelatex} \end{maplegroup}
  </p>
  <p>
    There are examples of commands where the capitalized version behaves differently from the non-capitalized version.
  </p>
  <aside>
    <p>
      In this example,
      the <c>Int()</c> command and <c>int()</c> command behave differently.
      Using <c>Int()</c> followed by <c>value(%)</c> will display the integral and then evaluate it.
    </p>
  </aside>
  <p>
    \begin{maplegroup} \begin{mapleinput} {Int(2x, x=10..13);}{
    <me>
      > \textit{Int}(2x, x = 10 .. 13);
    </me>
  </p>
  <p>
    } \end{mapleinput} \relax \begin{maplelatex} {Int(2*x, x = 10 .. 13)}{
    <me>
      \displaystyle \int_{10}^{13}\!2\,x\,{ d}x
    </me>
  </p>
  <p>
    } \end{maplelatex} \end{maplegroup} \begin{maplegroup} \begin{mapleinput} {int(2x, x=10..13);}{
    <me>
      > \textit{int}(2x, x = 10 .. 13);
    </me>
  </p>
  <p>
    } \end{mapleinput} \relax \begin{maplelatex} {69}{
    <me>
      \displaystyle 69
    </me>
  </p>
  <p>
    } \end{maplelatex} \end{maplegroup}
  </p>
</chapter>